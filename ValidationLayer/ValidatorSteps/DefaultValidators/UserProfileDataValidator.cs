//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------
using ValidationLayer.Interfaces;
using DataLayer.Data;

using System;
using System.Collections.Generic;
namespace ValidationLayer.DefaultValidators
{
    
    internal  class DefaultUserProfileDataValidator : IValidatorStep<UserProfileData>
    {
    
    	bool IValidatorStep<UserProfileData>.IsValid(UserProfileData data, IList<InvalidProperty> errors)
    	{
    		var nullReason = "The property can't be null";
    		var lengthReason = "The property can't be longer than ";
    		if(data.Id == null) errors.Add(new InvalidProperty(nameof(data.Id), nullReason));
    		if(data.IdUser == null) errors.Add(new InvalidProperty(nameof(data.IdUser), nullReason));
    		if(data.Name == null) errors.Add(new InvalidProperty(nameof(data.Name), nullReason));
    		if(data.Name != null && data.Name.Length > 150) errors.Add(new InvalidProperty(nameof(data.Name), lengthReason + 150));
    		if(data.FirstSurname == null) errors.Add(new InvalidProperty(nameof(data.FirstSurname), nullReason));
    		if(data.FirstSurname != null && data.FirstSurname.Length > 150) errors.Add(new InvalidProperty(nameof(data.FirstSurname), lengthReason + 150));
    		if(data.LastSurname == null) errors.Add(new InvalidProperty(nameof(data.LastSurname), nullReason));
    		if(data.LastSurname != null && data.LastSurname.Length > 150) errors.Add(new InvalidProperty(nameof(data.LastSurname), lengthReason + 150));
    		return errors.Count == 0;
    	}
    }
}
