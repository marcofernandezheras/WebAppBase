//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------
using ValidationLayer.Interfaces;
using DataLayer.Data;

using System;
using System.Collections.Generic;
namespace ValidationLayer.DefaultValidators
{
    
    internal  class DefaultUserDataValidator : IValidatorStep<UserData>
    {
    
    	bool IValidatorStep<UserData>.IsValid(UserData data, IList<InvalidProperty> errors)
    	{
    		var nullReason = "The property can't be null";
    		var lengthReason = "The property can't be longer than ";
    		if(data.Id == null) errors.Add(new InvalidProperty(nameof(data.Id), nullReason));
    		if(data.Email == null) errors.Add(new InvalidProperty(nameof(data.Email), nullReason));
    		if(data.Email != null && data.Email.Length > 150) errors.Add(new InvalidProperty(nameof(data.Email), lengthReason + 150));
    		if(data.Password == null) errors.Add(new InvalidProperty(nameof(data.Password), nullReason));
    		if(data.Salt == null) errors.Add(new InvalidProperty(nameof(data.Salt), nullReason));
    		if(data.Created == null) errors.Add(new InvalidProperty(nameof(data.Created), nullReason));
    		if(data.Updated == null) errors.Add(new InvalidProperty(nameof(data.Updated), nullReason));
    		return errors.Count == 0;
    	}
    }
}
